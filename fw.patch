diff --git a/src/estimator.cpp b/src/estimator.cpp
index 3bf40c3..176baf0 100644
--- a/src/estimator.cpp
+++ b/src/estimator.cpp
@@ -32,6 +32,8 @@
 #include "estimator.h"
 #include "rosflight.h"
 
+#include <iostream>
+
 namespace rosflight_firmware
 {
 
@@ -161,9 +163,13 @@ void Estimator::run()
   // add in accelerometer
   float a_sqrd_norm = accel_LPF_.sqrd_norm();
 
+  float margin = 0.2f;
+  const float lowerbound = (1.0f-margin)*(1.0f-margin)*9.80665f*9.80665f;
+  const float upperbound = (1.0f+margin)*(1.0f+margin)*9.80665f*9.80665f;
+
   turbomath::Vector w_acc;
   if (RF_.params_.get_param_int(PARAM_FILTER_USE_ACC)
-      && a_sqrd_norm < 1.1f*1.1f*9.80665f*9.80665f && a_sqrd_norm > 0.9f*0.9f*9.80665f*9.80665f)
+      && lowerbound < a_sqrd_norm && a_sqrd_norm < upperbound)
   {
     // Get error estimated by accelerometer measurement
     last_acc_update_us_ = now_us;
@@ -192,12 +198,16 @@ void Estimator::run()
     w_acc.x = 0.0f;
     w_acc.y = 0.0f;
     w_acc.z = 0.0f;
+
+    std::cout << "Skipped: " << a_sqrd_norm  << " (" << accel_LPF_.norm() << ")" << std::endl;
   }
 
   if (attitude_correction_next_run_)
   {
     attitude_correction_next_run_ = false;
-    w_acc += RF_.params_.get_param_float(PARAM_FILTER_KP_ATT_CORRECTION)*(q_correction_ - state_.attitude);
+    auto err = (q_correction_ - state_.attitude);
+    // w_acc += RF_.params_.get_param_float(PARAM_FILTER_KP_ATT_CORRECTION)*err;
+    std::cout << "[FIRMWARE] extAtt err: " << err.x << ", " << err.y << ", " << err.z << std::endl;
   }
 
 
